#
#    See the NOTICE file distributed with this work for additional information
#    regarding copyright ownership.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

version: "3.7"

services:
  biapi-dev:
    container_name: biapi
    image: breedinginsight/biapi:latest
    build:
      context: .
      dockerfile: ./Dockerfile-dev
      args:
        HOST_USER_ID: ${USER_ID:-0}
        HOST_GROUP_ID: ${GROUP_ID:-0}
    depends_on:
      - bidb
      - brapi-server
      - redis
      - mailhog
      - gigwa
    volumes:
      - /usr/bin/docker:/usr/bin/docker
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - API_INTERNAL_PORT=${API_INTERNAL_PORT}
      - API_INTERNAL_TEST_PORT=${API_INTERNAL_TEST_PORT}
      - OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}
      - JWT_DOMAIN=${JWT_DOMAIN}
      - DB_SERVER=${DB_SERVER}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_ACTOR=${GITHUB_ACTOR}
      - BRAPI_DEFAULT_URL=${BRAPI_DEFAULT_URL}
      - BRAPI_REFERENCE_SOURCE=${BRAPI_REFERENCE_SOURCE}
      - EMAIL_RELAY_HOST=${EMAIL_RELAY_HOST}
      - EMAIL_RELAY_PORT=${EMAIL_RELAY_PORT}
      - EMAIL_FROM=${EMAIL_FROM}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - REDIS_TIMEOUT=${REDIS_TIMEOUT:-30s}
      - REDIS_SSL=${REDIS_SSL:-false}
      - GIGWA_HOST=${GIGWA_HOST:-http://gigwa:8080}
      - GIGWA_USER=${GIGWA_USER}
      - GIGWA_PASSWORD=${GIGWA_PASSWORD}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - AWS_GENO_BUCKET=${AWS_GENO_BUCKET}
      - AWS_S3_ENDPOINT=${AWS_S3_ENDPOINT:-https://s3.us-east-1.amazonaws.com}
    ports:
      - ${API_INTERNAL_PORT}:${API_INTERNAL_PORT}
    networks:
      - backend
  bidb:
    image: postgres:11.4
    container_name: bidb
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - biapi_data:/var/lib/postgresql/data
    networks:
      backend:
        aliases:
          - dbserver
  brapi-server:
    image: breedinginsight/brapi-java-server:develop
    container_name: brapi-server
    depends_on:
      - bidb
    environment:
      - BRAPI_DB_SERVER=dbserver:5432
      - BRAPI_DB=postgres
      - BRAPI_DB_USER=postgres
      - BRAPI_DB_PASSWORD=${DB_PASSWORD}
    ports:
      - ${BRAPI_SERVER_PORT}:8080
    volumes:
      - ./src/main/resources/brapi/properties/application.properties:/home/brapi/properties/application.properties
      - ./src/main/resources/brapi/sql/:/home/brapi/sql/
    networks:
      backend:
        aliases:
          - brapiserver
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    restart: always
    ports:
      - "1025:1025"
      - "8025:8025"
  redis:
    image: redis
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      backend:
  gigwa:
    depends_on:
      - mongo
    image: breedinginsight/gigwa:develop
    container_name: ${GIGWA_CONTAINER_NAME:-gigwa}
    ports:
      - ${GIGWA_PORT:-5080}:8080
    restart: always
    environment:
      MONGO_IP: ${GIGWA_CONTAINER_NAME:-gigwa}_db
      MONGO_PORT: 27017
      MONGO_INITDB_ROOT_USERNAME: ${GIGWA_MONGO_USER:-mongo}
      MONGO_INITDB_ROOT_PASSWORD: ${GIGWA_MONGO_PASSWORD:-mongo}
      HOST_LOCALE: "${LANG}"
      GIGWA.serversAllowedToImport: ${BRAPI_REFERENCE_SOURCE}
    networks:
      backend:
        aliases:
          - gigwa
    volumes:
      - type: volume
        source: gigwa_data
        target: /usr/local/tomcat/config
  mongo:
    image: mongo:4.2.21
    container_name: ${GIGWA_CONTAINER_NAME:-gigwa}_db
    restart: always
    command: --profile 0 --slowms 60000 --storageEngine wiredTiger --wiredTigerCollectionBlockCompressor=zstd --directoryperdb --quiet
    ports:
      - ${GIGWA_MONGO_PORT:-27017}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${GIGWA_MONGO_USER:-mongo}
      MONGO_INITDB_ROOT_PASSWORD: ${GIGWA_MONGO_PASSWORD:-mongo}
    volumes:
      - type: volume
        source: gigwa_mongo_data
        target: /data/db
    networks:
      backend:
        aliases:
          - gigwa_db
  localstack:
    container_name: "localstack"
    image: localstack/localstack
    ports:
      - "4566:4566"
    networks:
      backend:
        aliases:
          - localstack
    environment:
      - HOSTNAME_EXTERNAL=localstack

networks:
  backend:

volumes:
  biapi_data:
    name: biapi_data
  gigwa_data:
    name: ${GIGWA_CONTAINER_NAME:-gigwa}_data
  gigwa_mongo_data:
    name: ${GIGWA_CONTAINER_NAME:-gigwa}_mongo_data
