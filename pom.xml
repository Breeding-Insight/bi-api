<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.breedinginsight</groupId>
    <artifactId>bi-api</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Breeding Insight API</name>
    <description></description>
    <url>https://breedinginsight.org</url>

    <organization>
        <name>Breeding Insight, Cornell University</name>
        <url>https://breedinginsight.org</url>
    </organization>

    <developers>
        <developer>
            <name>Tim Parsons</name>
            <email>tim.parsons@cornell.edu</email>
        </developer>
        <developer>
            <name>Nick Palladino</name>
            <email>np398@cornell.edu</email>
        </developer>
        <developer>
            <name>Dave Meidlinger</name>
            <email>djm226@cornell.edu</email>
        </developer>
        <developer>
            <name>Chris Tucker</name>
            <email>ct447@cornell.edu</email>
        </developer>
    </developers>

    <properties>
        <micronaut.version>1.2.8</micronaut.version>
        <micronaut.security.version>1.3.0.BUILD-SNAPSHOT</micronaut.security.version>
        <jdk.version>13</jdk.version>
        <maven.compiler.target>${jdk.version}</maven.compiler.target>
        <maven.compiler.source>${jdk.version}</maven.compiler.source>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <exec.mainClass>org.breedinginsight.api.Application</exec.mainClass>
        <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version> <!-- 2.22.2 -->
        <maven-failsafe-plugin.version>2.19.1</maven-failsafe-plugin.version>
        <jvm.options>--enable-preview</jvm.options>

        <jooq.version>3.12.3</jooq.version>
        <postgres.version>42.2.6</postgres.version>
        <logback.version>1.2.3</logback.version>
        <lombok.version>1.18.10</lombok.version>
        <gson.version>2.8.6</gson.version>
        <spock.version>1.1.2</spock.version>
    </properties>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <db.config>src/build/build.properties</db.config>
            </properties>
        </profile>
        <profile>
            <id>dev</id>
            <activation>
                <property>
                    <name>dev</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <db.config>src/build/build.dev.properties</db.config>
            </properties>
        </profile>
        <profile>
            <id>test</id>
            <activation>
                <property>
                    <name>test</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <db.config>src/build/build.test.properties</db.config>
            </properties>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>jcenter.bintray.com</id>
            <url>https://jcenter.bintray.com</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository> <!-- repo where micronaut snapshots are deployed -->
            <id>jfrog-snapshot</id>
            <url>https://oss.jfrog.org/artifactory/jfrog-dependencies</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.micronaut</groupId>
                <artifactId>micronaut-bom</artifactId>
                <version>${micronaut.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-inject</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-validation</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-runtime</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.configuration</groupId>
            <artifactId>micronaut-jdbc-hikari</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-http-server-netty</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.configuration</groupId>
            <artifactId>micronaut-jooq</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-security</artifactId>
<!--            <version>${micronaut.security.version}</version>-->
            <version>1.3.0.BUILD-20200122.112702-10</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-security-jwt</artifactId>
<!--            <version>${micronaut.security.version}</version>-->
            <version>1.3.0.BUILD-20200122.112704-10</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>io.micronaut.configuration</groupId>
            <artifactId>micronaut-security-oauth2</artifactId>
<!--            <version>${micronaut.security.version}</version>-->
            <version>1.3.0.BUILD-20200122.112706-10</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgres.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${jooq.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta</artifactId>
            <version>${jooq.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
            <version>${jooq.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>io.micronaut.configuration</groupId>
            <artifactId>micronaut-flyway</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>28.1-jre</version>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>4.2.2</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.test</groupId>
            <artifactId>micronaut-test-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.test</groupId>
            <artifactId>micronaut-test-spock</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>3.2.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>1.13.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
                <configuration>
                    <files>
                        <file>${db.config}</file>
                    </files>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${exec.mainClass}</mainClass>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>-classpath</argument>
                        <classpath/>
                        <argument>-noverify</argument>
                        <argument>-XX:TieredStopAtLevel=1</argument>
                        <argument>-Dcom.sun.management.jmxremote</argument>

                        <argument>${exec.mainClass}</argument>
                    </arguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
        <plugin>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen-maven</artifactId>
            <version>${jooq.version}</version>
            <executions>
                <execution>
                    <goals>
                        <goal>generate</goal>
                    </goals>
                </execution>
            </executions>

            <configuration>
                <jdbc>
                    <driver>org.postgresql.Driver</driver>
                    <url>jdbc:postgresql://${DB_SERVER}/${DB_NAME}</url>
                    <user>${DB_USER}</user>
                    <password>${DB_PASSWORD}</password>
                </jdbc>
                <generator>
                    <name>org.breedinginsight.generation.JooqDaoGenerator</name>
                    <database>
                        <name>org.jooq.meta.postgres.PostgresDatabase</name>
                        <includes>.*</includes>
                        <inputSchema>public</inputSchema>
                        <includeTables>true</includeTables>
                        <includeUDTs>true</includeUDTs>
                        <includeRoutines>false</includeRoutines>
                        <includePrimaryKeys>true</includePrimaryKeys>
                        <includeUniqueKeys>true</includeUniqueKeys>
                        <includeForeignKeys>true</includeForeignKeys>
                        <includeCheckConstraints>true</includeCheckConstraints>
                        <includeIndexes>false</includeIndexes>
                        <excludes>
                            flyway_schema_history|base_entity|base_track_edit_entity|spatial_ref_sys
                        </excludes>
                    </database>

                    <strategy>
                        <matchers>
                            <tables>
                                <table>
                                    <pojoClass>
                                        <transform>PASCAL</transform>
                                        <expression>$0_ENTITY</expression>
                                    </pojoClass>
                                    <tableClass>
                                        <transform>PASCAL</transform>
                                        <expression>$0_TABLE</expression>
                                    </tableClass>
                                </table>
                            </tables>
                        </matchers>
                    </strategy>

                    <target>
                        <packageName>org.breedinginsight.dao.db</packageName>
                        <directory>target/generated-sources/jooq</directory>
                    </target>
                    <generate>
                        <pojos>true</pojos>
                        <daos>true</daos>
                        <fluentSetters>false</fluentSetters>
                        <javaTimeTypes>true</javaTimeTypes>
                    </generate>
                </generator>
            </configuration>
            <dependencies>
                <dependency>
                    <groupId>org.breedinginsight</groupId>
                    <artifactId>bi-jooq-codegen</artifactId>
                    <version>1.0-SNAPSHOT</version>
                </dependency>
            </dependencies>
        </plugin>
        <plugin>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-maven-plugin</artifactId>
            <version>6.0.0</version>
            <configuration>
                <url>jdbc:postgresql://${DB_SERVER}/${DB_NAME}</url>
                <user>${DB_USER}</user>
                <password>${DB_PASSWORD}</password>
            </configuration>
            <dependencies>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>${postgres.version}</version>
                </dependency>
            </dependencies>
        </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.junit.platform</groupId>
                            <artifactId>junit-platform-surefire-provider</artifactId>
                            <version>1.1.0</version>
                        </dependency>
                        <dependency>
                            <groupId>org.junit.jupiter</groupId>
                            <artifactId>junit-jupiter-engine</artifactId>
                            <version>5.1.0</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <redirectTestOutputToFile>false</redirectTestOutputToFile>
                            <argLine>${jvm.options}</argLine>
                        <detail>true</detail>
                        <includes>
                            <include>%regex[.*]</include>
                        </includes>
                        <systemPropertyVariables>
                            <oauth.clientId>test</oauth.clientId>
                            <oauth.clientSecret>test</oauth.clientSecret>
                            <jwt.secret>test</jwt.secret>
                            <micronaut.server.port>${API_INTERNAL_TEST_PORT}</micronaut.server.port>
                            <db.default.host>${DB_SERVER}</db.default.host>
                            <db.default.name>${DB_NAME}</db.default.name>
                            <db.default.username>${DB_USER}</db.default.username>
                            <db.default.password>${DB_PASSWORD}</db.default.password>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <compilerArgs>
                            <arg>-parameters</arg>
                            <arg>--enable-preview</arg>
                        </compilerArgs>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                            <path>
                                <groupId>io.micronaut</groupId>
                                <artifactId>micronaut-inject-java</artifactId>
                                <version>${micronaut.version}</version>
                            </path>
                            <path>
                                <groupId>io.micronaut</groupId>
                                <artifactId>micronaut-validation</artifactId>
                                <version>${micronaut.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                    <executions>
                        <execution>
                            <id>test-compile</id>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                            <configuration>
                                <compilerArgs>
                                    <arg>-parameters</arg>
                                    <arg>--enable-preview</arg>
                                </compilerArgs>
                                <annotationProcessorPaths>
                                    <path>
                                        <groupId>org.projectlombok</groupId>
                                        <artifactId>lombok</artifactId>
                                        <version>${lombok.version}</version>
                                    </path>
                                    <path>
                                        <groupId>io.micronaut</groupId>
                                        <artifactId>micronaut-inject-java</artifactId>
                                        <version>${micronaut.version}</version>
                                    </path>
                                    <path>
                                        <groupId>io.micronaut</groupId>
                                        <artifactId>micronaut-validation</artifactId>
                                        <version>${micronaut.version}</version>
                                    </path>
                                </annotationProcessorPaths>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
